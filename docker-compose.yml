version: "3"

services:
  auth-svc:
    image: "auth-svc:dev"
    container_name: "auth-svc"
    env_file:
      - ./apps/auth-svc/.env
    build:
      context: "./apps/auth-svc"
    expose:
      - 50051"
    depends_on:
      - "auth-db"
      - "cache"
    environment:
      NODE_ENV: "development"
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "50051"
      GRPC_TRACE: "all"
      GRPC_VERBOSITY: "DEBUG"
      DB_HOST: "auth-db"
      DB_PORT: "5432"
      DB_NAME: "social-auth"
      DB_USERNAME: "postgres"
      DB_PASSWORD: "postgres"
      DB_SCHEMA: "public"
      DB_SYNC: "true"
      REDIS_HOST: "cache"
      REDIS_PORT: "6379"
    healthcheck:
      test: ["CMD", "/bin/grpc_health_probe", "-addr=:50051"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: "on-failure"
    networks:
      - backend
      - frontend
      - auth-domain
  payment-svc:
    image: "payment-svc:dev"
    container_name: "payment-svc"
    env_file:
      - ./apps/payment-svc/.env
    build:
      context: "./apps/payment-svc"
    expose:
      - 50051"
    depends_on:
      - "payment-db"
      - "cache"
    environment:
      NODE_ENV: "development"
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "50051"
      GRPC_TRACE: "all"
      GRPC_VERBOSITY: "DEBUG"
      DB_HOST: "auth-db"
      DB_PORT: "5432"
      DB_USERNAME: "postgres"
      DB_PASSWORD: "postgres"
      DB_NAME: "social-payment"
      DB_SCHEMA: "public"
      DB_SYNC: "true"
      REDIS_HOST: "cache"
      REDIS_PORT: "6379"
    healthcheck:
      test: ["CMD", "/bin/grpc_health_probe", "-addr=:50051"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: "on-failure"
    networks:
      - backend
      - frontend
      - payment-domain

  gateway:
    image: "gateway:dev"
    container_name: "gateway"
    build:
      context: "./gateway"
    ports:
      - "3000:3000"
    depends_on:
      - "cache"
      - "auth-svc"
      - "payment-svc"
    environment:
      NODE_ENV: "development"
      AUTH_SVC_URL: "auth-svc:50051"
      PAYMENT_SVC_URL: "payment-svc:50051"
      GATEWAY_PORT: "3000"
      JWT_ACCESSTOKEN_SECRET: "VtWeuJo5cPrH1gzvLX0HwPkcbVVeMkV0/a2JFeP3hGE="
      JWT_REFRESHTOKEN_SECRET: "tPQz6vb7nJDilma85OQExilvgZX+QyEf1CL95DmfBLA="
      JWT_ISSUER: "application"
      JWT_AUDIENCE: "public"
      REDIS_HOST: "cache"
      REDIS_PORT: "6379"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:3000/healthz", "-q", "-O", "-", ">", "/dev/null", "2>&1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: "on-failure"
    networks:
      - frontend

  auth-db:
    image: "postgres:15"
    container_name: "auth-db"
    #expose:
    # - "5432"
    ports:
      - 5432:5432
    volumes:
      - auth-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: "on-failure"
    networks:
      - auth-domain

  cache:
    image: "redis:5-alpine"
    container_name: "redis-cache"
    expose:
      - "6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: "on-failure"
    networks:
      - frontend
      - backend

networks:
  frontend:
  backend:
  auth-domain:

volumes:
  auth-data:
